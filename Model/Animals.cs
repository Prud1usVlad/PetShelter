//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShelter.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Entity;
    using System.Windows;
    using System.Reflection;

    public partial class Animals : DbEntity
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Animals()
        {
            this.Contracts = new HashSet<Contracts>();
            this.StateValues = new HashSet<StateValues>();
            this.Vaccinations = new HashSet<Vaccinations>();
        }

        private int animalID;
        private string name;
        private string sex;
        private string animalKind;
        private Nullable<int> height;
        private Nullable<double> weight;
        private string color;
        private Nullable<System.DateTime> birthDate;
        private Nullable<System.DateTime> registrationDate;
        private Nullable<int> quarantineDays;
        private Nullable<int> roomID;
        private Nullable<int> groupID;

        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int AnimalID
        {
            get { return animalID; }
            set
            {
                animalID = value;
                OnPropertyChanged("AnimalID");
            }
        }
        public string Name 
        {
            get { return name; }
            set
            {
                name = value;
                OnPropertyChanged("Name");
            }
        }
        public string Sex 
        {
            get { return sex; }
            set
            {
                sex = value;
                OnPropertyChanged("Sex");
            }
        }
        public string AnimalKind 
        {
            get { return animalKind; }
            set
            {
                animalKind = value;
                OnPropertyChanged("AnimalKind");
            }
        }
        public Nullable<int> Height 
        {
            get { return height; }
            set
            {
                height = value;
                OnPropertyChanged("Height");
            }
        }
        public Nullable<double> Weight 
        {
            get { return weight; }
            set
            {
                weight = value;
                OnPropertyChanged("Weight");
            }
        }
        public string Color 
        {
            get { return color; }
            set
            {
                color = value;
                OnPropertyChanged("Color");
            }
        }
        public Nullable<System.DateTime> BirthDate 
        {
            get { return birthDate; }
            set
            {
                birthDate = value;
                OnPropertyChanged("PassNum");
            }
        }
        public Nullable<System.DateTime> RegistrationDate 
        {
            get { return registrationDate; }
            set
            {
                registrationDate = value;
                OnPropertyChanged("RegistrationDate");
            }
        }
        public Nullable<int> QuarantineDays 
        {
            get { return quarantineDays; }
            set
            {
                quarantineDays = value;
                OnPropertyChanged("QuarantineDays");
            }
        }
        public Nullable<int> RoomID 
        {
            get { return roomID; }
            set
            {
                roomID = value;
                OnPropertyChanged("RoomID");
            }
        }
        public Nullable<int> GroupID 
        {
            get { return groupID; }
            set
            {
                groupID = value;
                OnPropertyChanged("GroupID");
            }
        }
    
        internal virtual Groups Groups { get; set; }
        internal virtual Rooms Rooms { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        internal virtual ICollection<Contracts> Contracts { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        internal virtual ICollection<StateValues> StateValues { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        internal virtual ICollection<Vaccinations> Vaccinations { get; set; }

        public override List<DbEntity> GetForegnEntities()
        {
            return new List<DbEntity> { Groups, Rooms};
        }

        public override Dictionary<string, string> GetProperies()
        {
            var res = new Dictionary<string, string>();

            foreach (PropertyInfo prop in GetType().GetProperties())
            {
                res.Add(prop.Name, (prop.GetValue(this) ?? "-").ToString());
            }

            return res;
        }

        public override string ToString()
        {
            return "Animal";
        }
    }
}
