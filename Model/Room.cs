//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShelter.Model
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;

    public partial class Room : DbEntity
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Room()
        {
            this.Animals = new HashSet<Animal>();
            this.Caretakers = new HashSet<Caretaker>();
        }

        private string name;
        private Nullable<int> maxAnimalAmount;
        private int roomID;

        public int RoomID
        {
            get { return roomID; }
            set
            {
                roomID = value;
                OnPropertyChanged("RoomID");
            }
        }
        public string Name
        {
            get { return name; }
            set
            {
                name = value;
                OnPropertyChanged("Name");
            }
        }
        public Nullable<int> MaxAnimalAmount
        {
            get { return maxAnimalAmount; }
            set
            {
                maxAnimalAmount = value;
                OnPropertyChanged("MaxAnimalAmount");
            }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        internal virtual ICollection<Animal> Animals { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        internal virtual ICollection<Caretaker> Caretakers { get; set; }

        public override Dictionary<string, string> GetProperies()
        {
            var res = new Dictionary<string, string>();

            foreach (PropertyInfo prop in GetType().GetProperties())
            {
                res.Add(prop.Name, (prop.GetValue(this) ?? "-").ToString());
            }

            return res;
        }

        public override List<DbEntity> GetForegnEntities()
        {
            var res = new List<DbEntity>();

            foreach(Animal entity in Animals)
            {
                res.Add(entity);
            }

            return res;
        }

        public override string ToString()
        {
            return "Кімната";
        }

        public override string GetSearchString()
        {
            return $"{RoomID} {Name}";
        }
    }
}
