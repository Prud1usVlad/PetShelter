//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShelter.Model
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using PetShelter.View.EditWindows;

    public partial class StateValue : DbEntity
    {
        private int stateValueID;
        private Nullable<int> stateID;
        private Nullable<int> animalID;
        private string value;


        public int StateValueID
        {
            get { return stateValueID; }
            set
            {
                stateValueID = value;
                OnPropertyChanged("StateValueID");
            }
        }
        public Nullable<int> StateID
        {
            get { return stateID; }
            set
            {
                stateID = value;
                OnPropertyChanged("StateID");
            }
        }
        public Nullable<int> AnimalID
        {
            get { return animalID; }
            set
            {
                animalID = value;
                OnPropertyChanged("AnimalID");
            }
        }
        public string Value
        {
            get { return value; }
            set
            {
                this.value = value;
                OnPropertyChanged("Value");
            }
        }

        internal override int Identifier => StateValueID;
        internal override Type WindowType => typeof(StateValueEditWindow);

        internal virtual Animal Animal { get; set; }
        internal virtual State State { get; set; }

        public StateValue()
        {

        }

        public override List<DbEntity> GetForegnEntities()
        {
            return new List<DbEntity> { Animal, State };
        }

        public override Dictionary<string, string> GetProperies()
        {
            var res = new Dictionary<string, string>();

            foreach (PropertyInfo prop in GetType().GetProperties())
            {
                res.Add(prop.Name, (prop.GetValue(this) ?? "-").ToString());
            }

            return res;
        }

        public override void CopyProperties(DbEntity toCopy)
        {
            var item = toCopy as StateValue;

            foreach (PropertyInfo prop in GetType().GetProperties())
            {
                prop.SetValue(this, prop.GetValue(toCopy));
            }
        }

        public override string ToString()
        {
            string value = State.Name;
            value.Trim();

            if (value.EndsWith("стан"))
            {
                return value + " тварини";
            }
            else
            {
                return value;
            }
        }

        public override string GetSearchString()
        {
            return $"{StateValueID} {Value}";
        }

        public override List<string> GetFilterableProperties()
        {
            return new List<string> { "AnimalID", "StateID", "Value" };
        }
    }
}
