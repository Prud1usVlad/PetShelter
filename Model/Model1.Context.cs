//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShelter.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Reflection;

    public partial class DataContext : DbContext
    {
        public DataContext()
            : base("name=PetShelterEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Animal>()
               .HasMany(a => a.StateValues)
               .WithOptional(s => s.Animal)
               .HasForeignKey(s => s.AnimalID)
               .WillCascadeOnDelete(true);

            modelBuilder.Entity<Animal>()
                .HasOptional(a => a.Room)
                .WithMany(r => r.Animals)
                .HasForeignKey(a => a.RoomID);

            modelBuilder.Entity<StateValue>()
                .HasOptional(s => s.State)
                .WithMany(s => s.StateValues)
                .HasForeignKey(s => s.StateID);
        }

        public virtual DbSet<Animal> Animals { get; set; }
        public virtual DbSet<Caretaker> Caretakers { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<Emploee> Emploees { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<InfoDepEmploee> InfoDepEmploees { get; set; }
        public virtual DbSet<Producer> Producers { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<StateValue> StateValues { get; set; }
        public virtual DbSet<Vaccination> Vaccinations { get; set; }
        public virtual DbSet<Vaccine> Vaccines { get; set; }

        public DbSet GetDBSet(DbEntity item)
        {
            switch (item.GetType().Name)
            {
                case "Animal":
                    return Animals;
                case "Caretaker":
                    return Caretakers;
                case "Client":
                    return Clients;
                case "Contract":
                    return Contracts;
                case "Emploee":
                    return Emploees;
                case "Group":
                    return Groups;
                case "InfoDepEmploee":
                    return InfoDepEmploees;
                case "Producer":
                    return Producers;
                case "Room":
                    return Rooms;
                case "State":
                    return States;
                case "StateValue":
                    return StateValues;
                case "Vaccination":
                    return Vaccinations;
                case "Vaccine":
                    return Vaccines;
            }

            return null;
        }
    }
}
